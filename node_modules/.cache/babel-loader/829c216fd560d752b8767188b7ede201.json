{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MAHFUZ\\\\Desktop\\\\udemy\\\\04-food order\\\\src\\\\components\\\\Cart\\\\Cart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport styles from './Cart.module.css';\nimport CartItem from './CartItem';\nimport Modal from './../UI/Modal';\nimport CartContext from '../../store/cort-context';\nimport Checkout from './Checkout';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Cart = props => {\n  _s();\n\n  const [isOrder, setIsOrder] = useState(false);\n  const cartCtx = useContext(CartContext);\n  const totolAmount = cartCtx.totalAmount.toFixed(2);\n\n  const cartItemRemoveHandler = id => {\n    cartCtx.removeItem(id);\n  };\n\n  const cartItemAddHandler = item => {\n    cartCtx.addItem({ ...item,\n      amount: 1\n    });\n  };\n\n  const submitOrderHandler = userData => {\n    fetch('https://online-food-a4293-default-rtdb.firebaseio.com/orders.json', {\n      method: 'POST',\n      body: JSON.stringify({\n        user: userData,\n        orderedItems: cartCtx.items\n      })\n    });\n  };\n\n  const cartItems = /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: styles['cart-items'],\n    children: cartCtx.items.map(item => /*#__PURE__*/_jsxDEV(CartItem, {\n      name: item.name,\n      amount: item.amount,\n      price: item.price,\n      onRemove: cartItemRemoveHandler.bind(null, item.id),\n      onAdd: cartItemAddHandler.bind(null, item)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 7\n  }, this);\n\n  const orderHandler = () => {\n    setIsOrder(true);\n  };\n\n  const orderdiv = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.actions,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles['button--alt'],\n      onClick: props.onClose,\n      children: \"Close\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.button,\n      onClick: orderHandler,\n      children: \"Order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 22\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      onClose: props.onClose,\n      children: [cartItems, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.total,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Total Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\" TK:\", totolAmount, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 20\n      }, this), isOrder && /*#__PURE__*/_jsxDEV(Checkout, {\n        onConfirm: submitOrderHandler,\n        onCancel: props.onClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 31\n      }, this), !isOrder && orderdiv]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Cart, \"abW7bSYNNMXuW23trJPEgQG2DJI=\");\n\n_c = Cart;\nexport default Cart; // import styles from './Cart.module.css';\n// import Modal from './../UI/Modal';\n// import CartContext from './../../store/cort-context';\n// const Cart = (props) => {\n//   const cartItems = (\n//     <ul className={styles['cart-items']}>\n//       {[{ id: 'c1', name: 'Sushi', amount: 2, price: 12.99 }].map((item) => (\n//         <li>{item.name}</li>\n//       ))}\n//     </ul>\n//   );\n//   return (\n//     <Modal onClose={props.onClose}>\n//       {cartItems}\n//       <div className={styles.total}>\n//         <span>Total Amount</span>\n//         <span>35.62</span>\n//       </div>\n//       <div className={styles.actions}>\n//         <button className={styles['button--alt']} onClick={props.onClose} >Close</button>\n//         <button className={styles.button}>Order</button>\n//       </div>\n//     </Modal>\n//   );\n// };\n// export default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["C:/Users/MAHFUZ/Desktop/udemy/04-food order/src/components/Cart/Cart.js"],"names":["React","useContext","useState","styles","CartItem","Modal","CartContext","Checkout","Cart","props","isOrder","setIsOrder","cartCtx","totolAmount","totalAmount","toFixed","cartItemRemoveHandler","id","removeItem","cartItemAddHandler","item","addItem","amount","submitOrderHandler","userData","fetch","method","body","JSON","stringify","user","orderedItems","items","cartItems","map","name","price","bind","orderHandler","orderdiv","actions","onClose","button","total"],"mappings":"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","sourcesContent":["import React, {useContext,useState} from 'react'\r\nimport styles from './Cart.module.css'\r\nimport CartItem from './CartItem';\r\nimport Modal from './../UI/Modal';\r\nimport CartContext from '../../store/cort-context';\r\nimport Checkout from './Checkout';\r\n\r\nconst Cart = (props) => {\r\n\r\n  const [isOrder, setIsOrder] = useState(false);\r\n\r\n  const cartCtx = useContext(CartContext)\r\n\r\n  const totolAmount = cartCtx.totalAmount.toFixed(2)\r\n\r\n    const cartItemRemoveHandler = id => {\r\n      cartCtx.removeItem(id)\r\n    }\r\n    const cartItemAddHandler = item => {\r\n      cartCtx.addItem({...item, amount:1})\r\n    }\r\n\r\n    const submitOrderHandler = (userData)=>{\r\n      fetch ('https://online-food-a4293-default-rtdb.firebaseio.com/orders.json',{\r\n        method:'POST',\r\n        body: JSON.stringify({\r\n          user: userData,\r\n          orderedItems: cartCtx.items\r\n\r\n        })\r\n      })\r\n    }\r\n\r\n    const cartItems = ( \r\n      <ul className={styles['cart-items']}>\r\n        {cartCtx.items.map( (item) => (\r\n\r\n\r\n          <CartItem \r\n            key={item.id} \r\n            name={item.name} \r\n            amount={item.amount} \r\n            price={item.price}\r\n            onRemove={cartItemRemoveHandler.bind(null, item.id)}\r\n            onAdd={cartItemAddHandler.bind(null, item)}\r\n            />\r\n          ))}\r\n      </ul>\r\n    )\r\n    const orderHandler = () => {\r\n      setIsOrder(true)\r\n    }\r\n\r\n    const orderdiv = <div className={styles.actions}>\r\n    <button className={styles['button--alt']} onClick={props.onClose} >Close</button>\r\n    <button className={styles.button} onClick={orderHandler}>Order</button>\r\n    </div>\r\n    \r\n    return (\r\n        <>\r\n           {/* <Modal onClose={props.onClose}>\r\n               {cartItems}\r\n               <div className={styles.total} >\r\n                    <span>Total Amount</span>\r\n                    <span> TK:{totolAmount} </span>\r\n               </div>\r\n               <Checkout/>\r\n               <div className={styles.actions}>\r\n                  <button className={styles['button--alt']} onClick={props.onClose} >Close</button>\r\n                   <button className={styles['button']}>Order</button>\r\n               </div>\r\n            </Modal>  */}\r\n\r\n\r\n            <Modal onClose={props.onClose}>\r\n                 {cartItems}\r\n                   <div className={styles.total}>\r\n                     <span>Total Amount</span>\r\n                     <span> TK:{totolAmount} </span>\r\n                  </div>\r\n                  {isOrder && <Checkout onConfirm={submitOrderHandler} onCancel={props.onClose} /> }\r\n                  {!isOrder && orderdiv}\r\n                   \r\n                </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Cart\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import styles from './Cart.module.css';\r\n// import Modal from './../UI/Modal';\r\n// import CartContext from './../../store/cort-context';\r\n\r\n// const Cart = (props) => {\r\n//   const cartItems = (\r\n//     <ul className={styles['cart-items']}>\r\n//       {[{ id: 'c1', name: 'Sushi', amount: 2, price: 12.99 }].map((item) => (\r\n//         <li>{item.name}</li>\r\n//       ))}\r\n//     </ul>\r\n//   );\r\n\r\n//   return (\r\n//     <Modal onClose={props.onClose}>\r\n//       {cartItems}\r\n//       <div className={styles.total}>\r\n//         <span>Total Amount</span>\r\n//         <span>35.62</span>\r\n//       </div>\r\n//       <div className={styles.actions}>\r\n//         <button className={styles['button--alt']} onClick={props.onClose} >Close</button>\r\n//         <button className={styles.button}>Order</button>\r\n//       </div>\r\n//     </Modal>\r\n//   );\r\n// };\r\n\r\n// export default Cart;"]},"metadata":{},"sourceType":"module"}