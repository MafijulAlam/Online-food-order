{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MAHFUZ\\\\Desktop\\\\udemy\\\\04-food order\\\\src\\\\store\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport CartContext from './cort-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updatedItems = state.items.concat(action.item);\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n\n  const cartContex = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContex,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["C:/Users/MAHFUZ/Desktop/udemy/04-food order/src/store/CartProvider.js"],"names":["React","useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedItems","concat","item","updatedTotalAmount","price","amount","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","id","cartContex","addItem","removeItem","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,MAAMC,gBAAgB,GAAG;AACrBC,EAAAA,KAAK,EAAE,EADc;AAErBC,EAAAA,WAAW,EAAC;AAFS,CAAzB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACnC,MAAGA,MAAM,CAACC,IAAP,KAAc,KAAjB,EAAuB;AACnB,UAAMC,YAAY,GAAEH,KAAK,CAACH,KAAN,CAAYO,MAAZ,CAAmBH,MAAM,CAACI,IAA1B,CAApB;AACA,UAAMC,kBAAkB,GAAGN,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACI,IAAP,CAAYE,KAAZ,GAAkBN,MAAM,CAACI,IAAP,CAAYG,MAA7E;AACA,WAAM;AACFX,MAAAA,KAAK,EAACM,YADJ;AAEFL,MAAAA,WAAW,EAAEQ;AAFX,KAAN;AAIH;;AACD,SAAOV,gBAAP;AACH,CAVD;;AAaA,MAAMa,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAE5B,QAAM,CAACC,SAAD,EAAYC,kBAAZ,IAAkClB,UAAU,CAACK,WAAD,EAAcH,gBAAd,CAAlD;;AAEA,QAAMiB,oBAAoB,GAAIR,IAAD,IAAU;AACnCO,IAAAA,kBAAkB,CAAC;AAACV,MAAAA,IAAI,EAAE,KAAP;AAAcG,MAAAA,IAAI,EAACA;AAAnB,KAAD,CAAlB;AACH,GAFD;;AAIA,QAAMS,yBAAyB,GAAIC,EAAD,IAAQ;AACtCH,IAAAA,kBAAkB,CAAC;AAACV,MAAAA,IAAI,EAAE,QAAP;AAAiBa,MAAAA,EAAE,EAAEA;AAArB,KAAD,CAAlB;AACH,GAFD;;AAIA,QAAMC,UAAU,GAAE;AACdnB,IAAAA,KAAK,EAAEc,SAAS,CAACd,KADH;AAEdC,IAAAA,WAAW,EAACa,SAAS,CAACb,WAFR;AAGdmB,IAAAA,OAAO,EAAEJ,oBAHK;AAIdK,IAAAA,UAAU,EAAEJ;AAJE,GAAlB;AAOA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEE,UAA7B;AAAA,cACKN,KAAK,CAACS;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAxBD;;GAAMV,Y;;KAAAA,Y;AA0BN,eAAeA,YAAf","sourcesContent":["import React, {useReducer} from 'react'\r\nimport CartContext from './cort-context'\r\n\r\nconst defaultCartState = {\r\n    items: [],\r\n    totalAmount:0\r\n}\r\n\r\nconst cartReducer = (state, action) => {\r\n    if(action.type==='ADD'){\r\n        const updatedItems =state.items.concat(action.item)\r\n        const updatedTotalAmount = state.totalAmount + action.item.price*action.item.amount\r\n        return{\r\n            items:updatedItems,\r\n            totalAmount: updatedTotalAmount\r\n        }\r\n    }\r\n    return defaultCartState\r\n}\r\n\r\n\r\nconst CartProvider = (props) => {\r\n\r\n    const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState)\r\n\r\n    const addItemToCartHandler = (item) => {\r\n        dispatchCartAction({type: 'ADD', item:item})\r\n    }\r\n\r\n    const removeItemFromCartHandler = (id) => {\r\n        dispatchCartAction({type: 'REMOVE', id: id})\r\n    }\r\n\r\n    const cartContex ={\r\n        items: cartState.items,\r\n        totalAmount:cartState.totalAmount,\r\n        addItem: addItemToCartHandler,\r\n        removeItem: removeItemFromCartHandler\r\n    }\r\n\r\n    return (\r\n        <CartContext.Provider value={cartContex}>\r\n            {props.children}\r\n        </CartContext.Provider>\r\n    )\r\n}\r\n\r\nexport default CartProvider\r\n"]},"metadata":{},"sourceType":"module"}